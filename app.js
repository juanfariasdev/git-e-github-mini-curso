// Presentation controller
class GitPresentationController {
    constructor() {
        this.currentSlide = 1;
        this.totalSlides = 54;
        this.isFullscreen = false;

        // Module configuration
        this.modules = [
            { id: 1, title: "üìö Introdu√ß√£o e Revis√£o", slides: [1, 2, 3, 4, 5, 6] },
            { id: 2, title: "ü§ù Fundamentos Colaborativos", slides: [7, 8, 9, 10, 11, 12] },
            { id: 3, title: "üå≥ Estrat√©gias de Branching", slides: [13, 14, 15, 16, 17, 18, 19, 20] },
            { id: 4, title: "üîÑ Pull Requests", slides: [21, 22, 23, 24, 25, 26, 27, 28] },
            { id: 5, title: "‚öîÔ∏è Resolu√ß√£o de Conflitos", slides: [29, 30, 31, 32, 33, 34, 35] },
            { id: 6, title: "üìä Organiza√ß√£o e Gest√£o", slides: [36, 37, 38, 39, 40, 41, 42] },
            { id: 7, title: "‚≠ê Boas Pr√°ticas", slides: [43, 44, 45, 46, 47, 48, 49, 50, 51] },
            { id: 8, title: "üìù Slides Extras", slides: [52, 53, 54] }
        ];

        this.init();
        this.goToSlide(1);
    }

    init() {
        this.bindEvents();
        this.updateUI();
        this.generateMissingSlides();
    }

    bindEvents() {
        // Navigation buttons - FIX: Ensure correct button behavior
        document.getElementById('prev-btn').addEventListener('click', (e) => {
            e.stopPropagation();
            this.previousSlide();
        });
        document.getElementById('next-btn').addEventListener('click', (e) => {
            e.stopPropagation();
            this.nextSlide();
        });
        document.getElementById('fullscreen-btn').addEventListener('click', (e) => {
            e.stopPropagation();
            this.toggleFullscreen();
        });

        // Keyboard navigation
        document.addEventListener('keydown', (e) => this.handleKeyboard(e));


        // Fullscreen change events
        document.addEventListener('fullscreenchange', () => this.handleFullscreenChange());
        document.addEventListener('webkitfullscreenchange', () => this.handleFullscreenChange());
        document.addEventListener('mozfullscreenchange', () => this.handleFullscreenChange());
        document.addEventListener('MSFullscreenChange', () => this.handleFullscreenChange());
    }

    handleKeyboard(e) {
        switch (e.key) {
            case 'ArrowRight':
            case 'Space':
                e.preventDefault();
                this.nextSlide();
                break;
            case 'ArrowLeft':
                e.preventDefault();
                this.previousSlide();
                break;
            case 'Home':
                e.preventDefault();
                this.goToSlide(1);
                break;
            case 'End':
                e.preventDefault();
                this.goToSlide(this.totalSlides);
                break;
            case 'f':
            case 'F11':
                e.preventDefault();
                this.toggleFullscreen();
                break;
            case 'Escape':
                if (this.isFullscreen) {
                    this.exitFullscreen();
                }
                break;
        }
    }

    nextSlide() {
        if (this.currentSlide < this.totalSlides) {
            this.goToSlide(this.currentSlide + 1);
        }
    }

    previousSlide() {
        if (this.currentSlide > 1) {
            this.goToSlide(this.currentSlide - 1);
        }
    }

    goToSlide(slideNumber) {
        if (slideNumber < 1 || slideNumber > this.totalSlides) return;

        const currentSlideElement = document.querySelector('.slide.active');
        const newSlideElement = document.querySelector(`[data-slide="${slideNumber}"]`);

        if (!newSlideElement) return;

        const direction = slideNumber > this.currentSlide ? 'right' : 'left';

        // Remove active class from current slide
        if (currentSlideElement) {
            currentSlideElement.classList.remove('active');
            currentSlideElement.classList.add(direction === 'right' ? 'prev' : 'next');
        }

        // Add active class to new slide
        newSlideElement.classList.remove('prev', 'next');
        newSlideElement.classList.add('active');

        // Add animation class
        newSlideElement.classList.add(`entering-${direction}`);

        // Remove animation class after transition
        setTimeout(() => {
            newSlideElement.classList.remove(`entering-${direction}`);
        }, 400);

        this.currentSlide = slideNumber;
        this.updateUI();
    }

    updateUI() {
        // Update slide counter
        document.getElementById('current-slide').textContent = this.currentSlide;
        document.getElementById('total-slides').textContent = this.totalSlides;

        // Update progress bar
        const progress = (this.currentSlide / this.totalSlides) * 100;
        document.getElementById('progress-fill').style.width = `${progress}%`;

        // Update module indicator
        const currentModule = this.getCurrentModule();
        document.getElementById('module-indicator').textContent = currentModule.title;

        // Update navigation buttons
        document.getElementById('prev-btn').disabled = this.currentSlide === 1;
        document.getElementById('next-btn').disabled = this.currentSlide === this.totalSlides;
    }

    getCurrentModule() {
        for (const module of this.modules) {
            if (module.slides.includes(this.currentSlide)) {
                return module;
            }
        }
        return this.modules[0]; // fallback
    }

    toggleFullscreen() {
        if (!this.isFullscreen) {
            this.enterFullscreen();
        } else {
            this.exitFullscreen();
        }
    }

    enterFullscreen() {
        const element = document.documentElement;

        if (element.requestFullscreen) {
            element.requestFullscreen();
        } else if (element.webkitRequestFullscreen) {
            element.webkitRequestFullscreen();
        } else if (element.mozRequestFullScreen) {
            element.mozRequestFullScreen();
        } else if (element.msRequestFullscreen) {
            element.msRequestFullscreen();
        }

        document.body.classList.add('fullscreen');
    }

    exitFullscreen() {
        if (document.exitFullscreen) {
            document.exitFullscreen();
        } else if (document.webkitExitFullscreen) {
            document.webkitExitFullscreen();
        } else if (document.mozCancelFullScreen) {
            document.mozCancelFullScreen();
        } else if (document.msExitFullscreen) {
            document.msExitFullscreen();
        }

        document.body.classList.remove('fullscreen');
    }

    handleFullscreenChange() {
        this.isFullscreen = !!(document.fullscreenElement ||
            document.webkitFullscreenElement ||
            document.mozFullScreenElement ||
            document.msFullscreenElement);

        if (!this.isFullscreen) {
            document.body.classList.remove('fullscreen');
        }
    }

    generateMissingSlides() {
        const container = document.getElementById('slide-container');
        const existingSlides = container.querySelectorAll('.slide').length;

        if (existingSlides >= this.totalSlides) return;

        // Generate missing slides with placeholder content
        for (let i = existingSlides + 1; i <= this.totalSlides; i++) {
            const slide = document.createElement('div');
            slide.className = 'slide';
            slide.setAttribute('data-slide', i);

            const content = this.generateSlideContent(i);
            slide.innerHTML = content;

            container.appendChild(slide);
        }
    }

    generateSlideContent(slideNumber) {
        const slideData = this.getSlideData(slideNumber);

        return `
            <div class="slide-content">
                <h2>${slideData.title}</h2>
                <div class="slide-body">
                    ${slideData.content}
                </div>
            </div>
        `;
    }

    getSlideData(slideNumber) {
        const slideMap = {
            1: {
                title: "üéØ Mini Curso Git e GitHub",
                content: `
            <h3>para Trabalho em Equipe</h3>
            <div class="course-details">
            <p><strong>Dura√ß√£o:</strong> 3 horas e 30 minutos</p>
            <p><strong>Hor√°rio:</strong> 13:15 - 17:00</p>
            <p><strong>Foco:</strong> Colabora√ß√£o e trabalho em equipe</p>
            </div>
            <div class="git-logos">
            <div class="git-logo">Git</div>
            <div class="github-logo">GitHub</div>
            </div>
            `
            },
            2: {
                title: "üìÖ Agenda do Curso",
                content: `
            <div class="schedule">
            <div class="schedule-item">
                <span class="time">13:15 - 13:35</span>
                <span class="module">üìö Introdu√ß√£o e Revis√£o</span>
                <span class="duration">20 min</span>
            </div>
            <div class="schedule-item">
                <span class="time">13:35 - 14:15</span>
                <span class="module">ü§ù Fundamentos Colaborativos</span>
                <span class="duration">40 min</span>
            </div>
            <div class="schedule-item">
                <span class="time">14:15 - 15:05</span>
                <span class="module">üå≥ Estrat√©gias de Branching</span>
                <span class="duration">50 min</span>
            </div>
            <div class="schedule-item break">
                <span class="time">15:05 - 15:20</span>
                <span class="module">‚òï INTERVALO</span>
                <span class="duration">15 min</span>
            </div>
            <div class="schedule-item">
                <span class="time">15:20 - 16:05</span>
                <span class="module">üîÑ Pull Requests e Code Review</span>
                <span class="duration">45 min</span>
            </div>
            <div class="schedule-item">
                <span class="time">16:05 - 16:35</span>
                <span class="module">‚öîÔ∏è Resolu√ß√£o de Conflitos</span>
                <span class="duration">30 min</span>
            </div>
            <div class="schedule-item">
                <span class="time">16:35 - 16:50</span>
                <span class="module">üìä Organiza√ß√£o e Gest√£o</span>
                <span class="duration">15 min</span>
            </div>
            <div class="schedule-item">
                <span class="time">16:50 - 17:00</span>
                <span class="module">‚≠ê Boas Pr√°ticas</span>
                <span class="duration">10 min</span>
            </div>
            </div>
            `
            },
            3: {
                title: "üö´ Problemas Comuns em Equipes",
                content: `
            <div class="problems-grid">
            <div class="problem-item">
                <h3>üîÑ Conflitos Constantes</h3>
                <p>Altera√ß√µes simult√¢neas no mesmo arquivo geram conflitos dif√≠ceis de resolver</p>
            </div>
            <div class="problem-item">
                <h3>üìö Hist√≥rico Confuso</h3>
                <p>Commits desorganizados e mensagens pouco descritivas</p>
            </div>
            <div class="problem-item">
                <h3>üèóÔ∏è Falta de Padroniza√ß√£o</h3>
                <p>Cada desenvolvedor usa um fluxo diferente de trabalho</p>
            </div>
            <div class="problem-item">
                <h3>üîç Dificuldade de Review</h3>
                <p>Pull requests extensos e dif√≠ceis de revisar</p>
            </div>
            <div class="problem-item">
                <h3>üöÄ Deploy Arriscado</h3>
                <p>Medo de fazer deploy por falta de confian√ßa no c√≥digo</p>
            </div>
            <div class="problem-item">
                <h3>üì± Comunica√ß√£o Falha</h3>
                <p>Falta de rastreabilidade entre tarefas e c√≥digo</p>
            </div>
            </div>
            `
            },
            4: {
                title: "üÜö Git √ó GitHub",
                content: `
            <div class="comparison">
            <section class="comparison-item">
                <h3>üîß Git (Local)</h3>
                <ul>
                <li>Sistema de controle de vers√£o distribu√≠do</li>
                <li>Funciona offline</li>
                <li>Gerencia hist√≥rico de commits e branches</li>
                <li>Executado via linha de comando ou IDE</li>
                <li>Armazena tudo na sua m√°quina</li>
                </ul>
                </section>
                <section class="comparison-item">
                <h3>üåê GitHub (Remoto)</h3>
                <ul>
                <li>Plataforma de hospedagem de reposit√≥rios Git</li>
                <li>Interface web para Pull Requests e Code Review</li>
                <li>Ferramentas de Issues, Projects e Actions</li>
                <li>Colabora√ß√£o e compartilhamento em nuvem</li>
                <li>Integra com CI/CD e automa√ß√µes</li>
                </ul>
            </section>
            </div>
            `
            },

            5: {
                title: "‚ö° Comandos B√°sicos ‚Äì Revis√£o",
                content: `
        <div style="display: grid; gap: 20px;">

            <section class="command-block">
            <h3>1. Configura√ß√£o Inicial (uma √∫nica vez)</h3>
            <pre><code class="language-bash">
        git config --global user.name  "Seu Nome"   # identifica autor dos commits
        git config --global user.email "seu@email.com"</code></pre>
            </section>

            <section class="command-block">
            <h3>2. Criar ou Clonar Reposit√≥rio</h3>
            <pre><code class="language-bash">
        git init                          # transforma pasta em reposit√≥rio
        git clone &lt;url&gt;                   # baixa c√≥pia existente</code></pre>
            </section>

            <section class="command-block">
            <h3>3. Fluxo Di√°rio</h3>
            <pre><code class="language-bash">
        git add &lt;arquivo&gt;                 # envia arquivo √† staging area
        git commit -m "feat: mensagem"    # salva snapshot
        git push origin main              # envia ao GitHub</code></pre>
            </section>

            <section class="command-block">
            <h3>4. Acompanhar Estado</h3>
            <pre><code class="language-bash">
        git status                        # arquivos modificados
        git log --oneline                 # hist√≥rico resumido
        git diff                          # diferen√ßas n√£o commitadas</code></pre>
            </section>

        </div>
        `
            },
            6: {
                title: "üéØ Exerc√≠cio Pr√°tico 1",
                content: `
            <div class="exercise">
            <h3>Verifica√ß√£o de Ambiente (10 minutos)</h3>
            <div class="checklist">
            <label><input type="checkbox"> git config --global user.name "Seu Nome"</label>
            <label><input type="checkbox"> git config --global user.email "seu@email.com"</label>
            <label><input type="checkbox"> Criar pasta e executar git init</label>
            <label><input type="checkbox"> Testar git status para ver reposit√≥rio vazio</label>
            <label><input type="checkbox"> Criar arquivo exemplo.txt</label>
            <label><input type="checkbox"> git add exemplo.txt</label>
            <label><input type="checkbox"> git commit -m "feat: adicionar arquivo exemplo"</label>
            <label><input type="checkbox"> git log --oneline para ver hist√≥rico</label>
            </div>
            <div class="exercise-commands">
            <h4>Comandos para verifica√ß√£o:</h4>
            <pre><code>
        git --version
        git config --list
        mkdir projeto-teste
        cd projeto-teste
        git init
        git status
        echo "Meu primeiro projeto" > exemplo.txt
        git add exemplo.txt
        git commit -m "feat: adicionar arquivo exemplo"
        git log --oneline
        </code></pre>
            </div>
            </div>
            `
            },
            7: {
                title: "ü§ù Conceitos de Colabora√ß√£o",
                content: `
                <div class="collaboration-flow">
                <div class="flow-item">
                    <h3>üì¶ Reposit√≥rio Distribu√≠do</h3>
                    <p>Cada desenvolvedor tem uma c√≥pia completa do projeto</p>
                    <p>Trabalho independente e offline</p>
                    <p>Sincroniza√ß√£o quando necess√°rio</p>
                </div>
                <div class="flow-item">
                    <h3>üîÑ Fluxo B√°sico</h3>
                    <ol>
                    <li>Clone do reposit√≥rio</li>
                    <li>Cria√ß√£o de branch</li>
                    <li>Desenvolvimento</li>
                    <li>Commit das mudan√ßas</li>
                    <li>Push da branch</li>
                    <li>Pull Request</li>
                    <li>Review e merge</li>
                    </ol>
                </div>
                </div>
            `
            },
            8: {
                title: "üåê Reposit√≥rios Remotos",
                content: `
                <div class="remote-concepts">
                <div class="concept">
                    <h3>üéØ Origin</h3>
                    <p>Reposit√≥rio remoto padr√£o (seu fork)</p>
                    <pre><code>git remote add origin https://github.com/seu-usuario/repo.git</code></pre>
                </div>
                <div class="concept">
                    <h3>‚¨ÜÔ∏è Upstream</h3>
                    <p>Reposit√≥rio original (projeto principal)</p>
                    <pre><code>git remote add upstream https://github.com/projeto-original/repo.git</code></pre>
                </div>
                <div class="concept">
                    <h3>üìã Comandos √öteis</h3>
                    <pre><code>
            git remote -v                    # Listar remotes
            git remote add upstream <url>    # Adicionar remote
            git remote set-url origin <url>  # Alterar URL
                    </code></pre>
                </div>
                </div>
            `
            },
            9: {
                title: "üç¥ Clone vs Fork",
                content: `
                <div class="clone-fork-comparison">
                <div class="comparison-item">
                    <h3>üì• Clone</h3>
                    <ul>
                    <li>C√≥pia local do reposit√≥rio</li>
                    <li>Acesso direto (se tiver permiss√£o)</li>
                    <li>Ideal para projetos pr√≥prios</li>
                    <li>Push direto para o reposit√≥rio</li>
                    </ul>
                    <pre><code>git clone https://github.com/user/repo.git</code></pre>
                </div>
                <div class="comparison-item">
                    <h3>üç¥ Fork</h3>
                    <ul>
                    <li>C√≥pia do reposit√≥rio na sua conta</li>
                    <li>Independente do original</li>
                    <li>Ideal para contribui√ß√µes</li>
                    <li>Pull Request para o original</li>
                    </ul>
                    <pre><code># Ap√≥s fork no GitHub
    git clone https://github.com/seu-usuario/repo.git
    git remote add upstream https://github.com/original/repo.git</code></pre>
                </div>
                </div>
            `
            },
            10: {
                title: "üîë Configura√ß√£o SSH",
                content: `
                <div class="ssh-setup">
                <h3>1. Gerar Chave SSH</h3>
                <pre><code>ssh-keygen -t ed25519 -C "seu@email.com"</code></pre>
                <h3>2. Adicionar ao SSH Agent</h3>
                <pre><code>eval "$(ssh-agent -s)"
    ssh-add ~/.ssh/id_ed25519</code></pre>
                <h3>3. Copiar Chave P√∫blica</h3>
                <pre><code>cat ~/.ssh/id_ed25519.pub</code></pre>
                <h3>4. Testar Conex√£o</h3>
                <pre><code>ssh -T git@github.com</code></pre>
                </div>
            `
            },
            11: {
                title: "üîê Gest√£o de Credenciais",
                content: `
                    <div class="credential-management">
                        <h3>Tokens de Acesso Pessoal</h3>
                        <div class="concept">
                            <h4>Criando Token no GitHub</h4>
                            <ol>
                                <li>Settings ‚Üí Developer settings ‚Üí Personal access tokens</li>
                                <li>Generate new token (classic)</li>
                                <li>Selecionar scopes necess√°rios</li>
                                <li>Copiar token (√∫nica vez)</li>
                            </ol>
                        </div>
                        <div class="concept">
                            <h4>Configurando Git</h4>
                            <pre><code>git config --global credential.helper store
git push origin main
# Digite username e token como password</code></pre>
                        </div>
                    </div>
                `
            },
            12: {
                title: "üéØ Exerc√≠cio Pr√°tico 2",
                content: `
                    <div class="exercise">
                        <h3>Configura√ß√£o Segura (15 minutos)</h3>
                        <div class="checklist">
                            <label><input type="checkbox"> Configurar chave SSH</label>
                            <label><input type="checkbox"> Adicionar ao GitHub</label>
                            <label><input type="checkbox"> Testar conex√£o SSH</label>
                            <label><input type="checkbox"> Clonar reposit√≥rio com SSH</label>
                            <label><input type="checkbox"> Configurar upstream (se necess√°rio)</label>
                        </div>
                    </div>
                `
            },
            13: {
                title: "üåü Benef√≠cios de Usar Branches",
                content: `
                    <div class="benefits-grid">
                        <div class="benefit-item">
                            <h3>üîí Isolamento</h3>
                            <p>Desenvolvimento independente sem afetar o c√≥digo principal</p>
                        </div>
                        <div class="benefit-item">
                            <h3>üîÑ Paralelismo</h3>
                            <p>M√∫ltiplas features sendo desenvolvidas simultaneamente</p>
                        </div>
                        <div class="benefit-item">
                            <h3>üß™ Experimenta√ß√£o</h3>
                            <p>Teste de novas ideias sem riscos</p>
                        </div>
                        <div class="benefit-item">
                            <h3>üìù Rastreabilidade</h3>
                            <p>Hist√≥rico claro de cada feature ou corre√ß√£o</p>
                        </div>
                    </div>
                `
            },
            14: {
                title: "üåä Git Flow vs GitHub Flow",
                content: `
                    <div class="flow-comparison">
                        <div class="flow-item">
                            <h3>Git Flow</h3>
                            <ul>
                                <li>M√∫ltiplas branches permanentes</li>
                                <li>develop, feature, release, hotfix</li>
                                <li>Mais complexo</li>
                                <li>Ideal para releases programados</li>
                                <img class="img-300" src="img/14-gitflow.png" alt=""/>
                            </ul>
                        </div>
                        <div class="flow-item">
                            <h3>GitHub Flow</h3>
                            <ul>
                                <li>Apenas main + feature branches</li>
                                <li>Mais simples</li>
                                <li>Deploy cont√≠nuo</li>
                                <li>Ideal para desenvolvimento √°gil</li>
                                <img class="img-300" src="img/14-githubflow.png" alt=""/>
                            </ul>
                        </div>
                    </div>
                `
            },
            15: {
                title: "üìã GitHub Flow Recomendado",
                content: `
                    <div class="github-flow">
                        <h3>Fluxo em 6 Passos</h3>
                        <ol class="flow-steps">
                            <li><strong>Criar branch</strong> - A partir da main</li>
                            <li><strong>Fazer commits</strong> - Pequenos e frequentes</li>
                            <li><strong>Abrir Pull Request</strong> - Cedo para discuss√£o</li>
                            <li><strong>Revisar c√≥digo</strong> - Colabora√ß√£o da equipe</li>
                            <li><strong>Fazer merge</strong> - Ap√≥s aprova√ß√£o</li>
                            <li><strong>Deletar branch</strong> - Limpar ap√≥s merge</li>
                        </ol>
                    </div>
                `
            }
        };

        // Continue with more slides...
        const defaultSlides = {
            16: { title: "üéÆ Comandos de Gerenciamento", content: this.getBranchCommandsContent() },
            17: { title: "üìù Conven√ß√µes de Nomenclatura", content: this.getNamingConventionsContent() },
            18: { title: "üõ°Ô∏è Prote√ß√£o de Branches", content: this.getBranchProtectionContent() },
            19: { title: "üîÑ Sincroniza√ß√£o de Branches", content: this.getBranchSyncContent() },
            20: { title: "üéØ Exerc√≠cio Pr√°tico 3", content: this.getExercise3Content() },
            21: { title: "üîÑ O que √© Pull Request", content: this.getPullRequestIntroContent() },
            22: { title: "üîç Anatomia de um PR", content: this.getPRAnatomyContent() },
            23: { title: "‚úçÔ∏è Criando PRs Efetivos", content: this.getEffectivePRContent() },
            24: { title: "üë• Processo de Code Review", content: this.getCodeReviewContent() },
            25: { title: "‚≠ê Boas Pr√°ticas de Review", content: this.getReviewBestPracticesContent() },
            26: { title: "üí¨ Tipos de Coment√°rios", content: this.getCommentTypesContent() },
            27: { title: "üîÄ Estrat√©gias de Merge", content: this.getMergeStrategiesContent() },
            28: { title: "üéØ Exerc√≠cio Pr√°tico 4", content: this.getExercise4Content() },
            29: { title: "‚ö° Entendendo Conflitos", content: this.getConflictIntroContent() },
            30: { title: "üîç Identificando Conflitos", content: this.getIdentifyConflictsContent() },
            31: { title: "üöß Marcadores de Conflito", content: this.getConflictMarkersContent() },
            32: { title: "üõ†Ô∏è Ferramentas de Resolu√ß√£o", content: this.getResolutionToolsContent() },
            33: { title: "üéØ Estrat√©gias de Resolu√ß√£o", content: this.getResolutionStrategiesContent() },
            34: { title: "üõ°Ô∏è Preven√ß√£o de Conflitos", content: this.getConflictPreventionContent() },
            35: { title: "üéØ Exerc√≠cio Pr√°tico 5", content: this.getExercise5Content() },
            36: { title: "üêõ GitHub Issues", content: this.getIssuesContent() },
            37: { title: "üìã Templates de Issues", content: this.getIssueTemplatesContent() },
            38: { title: "üè∑Ô∏è Sistema de Labels", content: this.getLabelsContent() },
            39: { title: "üìä GitHub Projects", content: this.getProjectsContent() },
            40: { title: "üéØ Milestones", content: this.getMilestonesContent() },
            41: { title: "üîó Linking Issues e PRs", content: this.getLinkingContent() },
            42: { title: "üéØ Exerc√≠cio Pr√°tico 6", content: this.getExercise6Content() },
            43: { title: "üìù Commits Sem√¢nticos", content: this.getSemanticCommitsContent() },
            44: { title: "üí° Exemplos de Commits", content: this.getCommitExamplesContent() },
            45: { title: "üîÑ Workflow Completo", content: this.getCompleteWorkflowContent() },
            46: { title: "ü§ñ GitHub Actions", content: this.getActionsContent() },
            47: { title: "üìä M√©tricas e Monitoramento", content: this.getMetricsContent() },
            48: { title: "üìö Recursos para Aprendizado", content: this.getLearningResourcesContent() },
            49: { title: "üöÄ Pr√≥ximos Passos", content: this.getNextStepsContent() },
            50: { title: "üìã Resumo Final", content: this.getFinalSummaryContent() }
        };

        return slideMap[slideNumber] || defaultSlides[slideNumber] || {
            title: `Slide ${slideNumber}`,
            content: `<p>Conte√∫do do slide ${slideNumber}</p>`
        };
    }

    getBranchCommandsContent() {
        return `
            <div class="commands-grid">
                <div class="command-block">
                    <h3>Criar e Trocar</h3>
                    <pre><code>git checkout -b feature/nova-funcionalidade
git switch -c feature/nova-funcionalidade</code></pre>
                </div>
                <div class="command-block">
                    <h3>Listar Branches</h3>
                    <pre><code>git branch
git branch -a
git branch -r</code></pre>
                </div>
                <div class="command-block">
                    <h3>Deletar Branch</h3>
                    <pre><code>git branch -d feature/concluida
git push origin --delete feature/concluida</code></pre>
                </div>
                <div class="command-block">
                    <h3>Renomear Branch</h3>
                    <pre><code>git branch -m novo-nome
git push origin -u novo-nome</code></pre>
                </div>
            </div>
        `;
    }

    getNamingConventionsContent() {
        return `
            <div class="naming-conventions">
                <h3>Padr√µes Recomendados</h3>
                <div class="convention-examples">
                    <div class="convention-item">
                        <h4>üÜï Features</h4>
                        <code>feature/adicionar-autenticacao</code>
                        <code>feature/JIRA-123-user-profile</code>
                    </div>
                    <div class="convention-item">
                        <h4>üêõ Bugfixes</h4>
                        <code>bugfix/corrigir-login</code>
                        <code>fix/header-responsivo</code>
                    </div>
                    <div class="convention-item">
                        <h4>üöë Hotfixes</h4>
                        <code>hotfix/security-patch</code>
                        <code>hotfix/critical-bug</code>
                    </div>
                    <div class="convention-item">
                        <h4>üìö Documenta√ß√£o</h4>
                        <code>docs/atualizar-readme</code>
                        <code>docs/api-documentation</code>
                    </div>
                </div>
            </div>
        `;
    }

    getBranchProtectionContent() {
        return `
            <div class="branch-protection">
                <h3>Configura√ß√µes de Prote√ß√£o</h3>
                <div class="protection-rules">
                    <div class="rule-item">
                        <h4>‚úÖ Require pull request reviews</h4>
                        <p>Obrigat√≥rio ter aprova√ß√£o antes do merge</p>
                    </div>
                    <div class="rule-item">
                        <h4>‚úÖ Require status checks</h4>
                        <p>Testes devem passar antes do merge</p>
                    </div>
                    <div class="rule-item">
                        <h4>‚úÖ Require branches to be up to date</h4>
                        <p>Branch deve estar atualizada com main</p>
                    </div>
                    <div class="rule-item">
                        <h4>‚úÖ Restrict pushes</h4>
                        <p>Apenas administradores podem fazer push direto</p>
                    </div>
                </div>
            </div>
        `;
    }

    getBranchSyncContent() {
        return `
            <div class="sync-commands">
                <h3>Mantendo Branches Sincronizadas</h3>
                <div class="command-block">
                    <h4>Atualizar Main Local</h4>
                    <pre><code>git checkout main
git pull upstream main</code></pre>
                </div>
                <div class="command-block">
                    <h4>Atualizar Feature Branch</h4>
                    <pre><code>git checkout feature/minha-branch
git rebase main</code></pre>
                </div>
                <div class="command-block">
                    <h4>Resolver Conflitos no Rebase</h4>
                    <pre><code>git add .
git rebase --continue</code></pre>
                </div>
            </div>
        `;
    }

    getExercise3Content() {
        return `
            <div class="exercise">
                <h3>Workflow de Branches (20 minutos)</h3>
                <div class="checklist">
                    <label><input type="checkbox"> Criar branch feature/adicionar-readme</label>
                    <label><input type="checkbox"> Adicionar arquivo README.md</label>
                    <label><input type="checkbox"> Commit das mudan√ßas</label>
                    <label><input type="checkbox"> Push da branch</label>
                    <label><input type="checkbox"> Criar Pull Request</label>
                    <label><input type="checkbox"> Simular review e merge</label>
                </div>
            </div>
        `;
    }

    getPullRequestIntroContent() {
        return `
            <div class="pr-intro">
                <h3>Defini√ß√£o</h3>
                <p>Pull Request √© uma proposta de mudan√ßa no c√≥digo que permite revis√£o e discuss√£o antes da integra√ß√£o.</p>
                <div class="benefits-grid">
                    <div class="benefit-item">
                        <h4>üîç Code Review</h4>
                        <p>Revis√£o colaborativa do c√≥digo</p>
                    </div>
                    <div class="benefit-item">
                        <h4>üí¨ Discuss√£o</h4>
                        <p>Debate sobre implementa√ß√£o</p>
                    </div>
                    <div class="benefit-item">
                        <h4>üìù Documenta√ß√£o</h4>
                        <p>Hist√≥rico de mudan√ßas</p>
                    </div>
                    <div class="benefit-item">
                        <h4>üß™ Testes</h4>
                        <p>Valida√ß√£o autom√°tica</p>
                    </div>
                </div>
            </div>
        `;
    }

    getPRAnatomyContent() {
        return `
            <div class="pr-anatomy">
                <h3>Componentes de um PR</h3>
                <div class="anatomy-items">
                    <div class="anatomy-item">
                        <h4>üìã T√≠tulo</h4>
                        <p>Descri√ß√£o concisa da mudan√ßa</p>
                    </div>
                    <div class="anatomy-item">
                        <h4>üìù Descri√ß√£o</h4>
                        <p>Contexto e detalhes da implementa√ß√£o</p>
                    </div>
                    <div class="anatomy-item">
                        <h4>üîç Arquivos Modificados</h4>
                        <p>Lista de mudan√ßas no c√≥digo</p>
                    </div>
                    <div class="anatomy-item">
                        <h4>üë• Reviewers</h4>
                        <p>Pessoas respons√°veis pela revis√£o</p>
                    </div>
                    <div class="anatomy-item">
                        <h4>üè∑Ô∏è Labels</h4>
                        <p>Categoriza√ß√£o do PR</p>
                    </div>
                    <div class="anatomy-item">
                        <h4>üéØ Milestone</h4>
                        <p>Associa√ß√£o com vers√£o/sprint</p>
                    </div>
                </div>
            </div>
        `;
    }

    getEffectivePRContent() {
        return `
            <div class="effective-pr">
                <h3>Template de PR Efetivo</h3>
                <div class="pr-template">
                    <pre><code>## üìã Descri√ß√£o
Breve descri√ß√£o das mudan√ßas

## üéØ Motiva√ß√£o
Por que esta mudan√ßa √© necess√°ria?

## üîÑ Tipo de Mudan√ßa
- [ ] Bug fix
- [ ] Nova feature
- [ ] Documenta√ß√£o
- [ ] Refatora√ß√£o

## üß™ Como Testar
Passos para testar as mudan√ßas

## üì∏ Screenshots
Se aplic√°vel, adicione capturas de tela

## ‚úÖ Checklist
- [ ] C√≥digo testado
- [ ] Documenta√ß√£o atualizada
- [ ] Testes passando</code></pre>
                </div>
            </div>
        `;
    }

    getCodeReviewContent() {
        return `
            <div class="code-review-process">
                <h3>Processo de Review</h3>
                <div class="review-steps">
                    <div class="step-item">
                        <h4>1. üìñ Ler Descri√ß√£o</h4>
                        <p>Entender contexto e objetivos</p>
                    </div>
                    <div class="step-item">
                        <h4>2. üîç Revisar C√≥digo</h4>
                        <p>Analisar l√≥gica e estrutura</p>
                    </div>
                    <div class="step-item">
                        <h4>3. üß™ Testar Localmente</h4>
                        <p>Verificar funcionamento</p>
                    </div>
                    <div class="step-item">
                        <h4>4. üí¨ Comentar</h4>
                        <p>Feedback construtivo</p>
                    </div>
                    <div class="step-item">
                        <h4>5. ‚úÖ Aprovar/Solicitar Mudan√ßas</h4>
                        <p>Decis√£o final sobre o PR</p>
                    </div>
                </div>
            </div>
        `;
    }

    getReviewBestPracticesContent() {
        return `
            <div class="review-best-practices">
                <h3>Boas Pr√°ticas de Review</h3>
                <div class="practice-items">
                    <div class="practice-item">
                        <h4>‚úÖ Seja Construtivo</h4>
                        <p>Critique o c√≥digo, n√£o a pessoa</p>
                    </div>
                    <div class="practice-item">
                        <h4>‚úÖ Seja Espec√≠fico</h4>
                        <p>Aponte problemas concretos</p>
                    </div>
                    <div class="practice-item">
                        <h4>‚úÖ Sugira Solu√ß√µes</h4>
                        <p>N√£o apenas identifique problemas</p>
                    </div>
                    <div class="practice-item">
                        <h4>‚úÖ Reconhe√ßa Bom C√≥digo</h4>
                        <p>Elogie implementa√ß√µes elegantes</p>
                    </div>
                    <div class="practice-item">
                        <h4>‚úÖ Seja Oportuno</h4>
                        <p>Revise rapidamente</p>
                    </div>
                </div>
            </div>
        `;
    }

    getCommentTypesContent() {
        return `
            <div class="comment-types">
                <h3>Tipos de Coment√°rios</h3>
                <div class="comment-examples">
                    <div class="comment-item">
                        <h4>üí° Sugest√£o</h4>
                        <p><em>"Que tal usar um Map aqui para melhor performance?"</em></p>
                    </div>
                    <div class="comment-item">
                        <h4>üêõ Bug</h4>
                        <p><em>"Este c√≥digo pode causar null pointer exception"</em></p>
                    </div>
                    <div class="comment-item">
                        <h4>‚ùì Pergunta</h4>
                        <p><em>"Por que n√£o usar a biblioteca padr√£o aqui?"</em></p>
                    </div>
                    <div class="comment-item">
                        <h4>üéâ Elogio</h4>
                        <p><em>"Excelente solu√ß√£o! Muito limpa e eficiente"</em></p>
                    </div>
                    <div class="comment-item">
                        <h4>üîß Refatora√ß√£o</h4>
                        <p><em>"Este m√©todo poderia ser quebrado em fun√ß√µes menores"</em></p>
                    </div>
                </div>
            </div>
        `;
    }

    getMergeStrategiesContent() {
        return `
            <div class="merge-strategies">
                <h3>Estrat√©gias de Merge</h3>
                <div class="strategy-comparison">
                    <div class="strategy-item">
                        <h4>üîÄ Merge Commit</h4>
                        <p>Preserva hist√≥rico completo das branches</p>
                        <code>git merge --no-ff feature-branch</code>
                    </div>
                    <div class="strategy-item">
                        <h4>üîÑ Squash and Merge</h4>
                        <p>Agrupa commits em um √∫nico commit</p>
                        <code>git merge --squash feature-branch</code>
                    </div>
                    <div class="strategy-item">
                        <h4>üìê Rebase and Merge</h4>
                        <p>Hist√≥rico linear, sem merge commits</p>
                        <code>git rebase main && git merge</code>
                    </div>
                </div>
            </div>
        `;
    }

    getExercise4Content() {
        return `
            <div class="exercise">
                <h3>Pull Request Completo (20 minutos)</h3>
                <div class="checklist">
                    <label><input type="checkbox"> Criar branch feature/melhorar-documentacao</label>
                    <label><input type="checkbox"> Fazer mudan√ßas significativas</label>
                    <label><input type="checkbox"> Criar PR com template</label>
                    <label><input type="checkbox"> Atribuir reviewers</label>
                    <label><input type="checkbox"> Simular processo de review</label>
                    <label><input type="checkbox"> Fazer merge com estrat√©gia escolhida</label>
                </div>
            </div>
        `;
    }

    getConflictIntroContent() {
        return `
            <div class="conflict-intro">
                <h3>Causas Comuns de Conflitos</h3>
                <div class="conflict-causes">
                    <div class="cause-item">
                        <h4>üìù Mesma Linha</h4>
                        <p>Duas pessoas modificam a mesma linha</p>
                    </div>
                    <div class="cause-item">
                        <h4>üîÑ Renomea√ß√£o</h4>
                        <p>Arquivo renomeado e modificado</p>
                    </div>
                    <div class="cause-item">
                        <h4>üóëÔ∏è Dele√ß√£o</h4>
                        <p>Arquivo deletado e modificado</p>
                    </div>
                    <div class="cause-item">
                        <h4>üîÄ Merge Complexo</h4>
                        <p>M√∫ltiplas branches com mudan√ßas sobrepostas</p>
                    </div>
                </div>
            </div>
        `;
    }

    getIdentifyConflictsContent() {
        return `
            <div class="identify-conflicts">
                <h3>Identificando Conflitos</h3>
                <div class="conflict-signals">
                    <div class="signal-item">
                        <h4>üö® Mensagem de Erro</h4>
                        <pre><code>CONFLICT (content): Merge conflict in file.js</code></pre>
                    </div>
                    <div class="signal-item">
                        <h4>üìä Git Status</h4>
                        <pre><code>git status
# both modified: file.js</code></pre>
                    </div>
                    <div class="signal-item">
                        <h4>üîç Git Diff</h4>
                        <pre><code>git diff
# mostra as diferen√ßas</code></pre>
                    </div>
                </div>
            </div>
        `;
    }

    getConflictMarkersContent() {
        return `
            <div class="conflict-markers">
                <h3>Marcadores de Conflito</h3>
                <div class="marker-example">
                    <pre><code>function greeting() {
&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
    return "Hello World!";
=======
    return "Ol√° Mundo!";
&gt;&gt;&gt;&gt;&gt;&gt;&gt; feature/traducao
}</code></pre>
                </div>
                <div class="marker-explanation">
                    <p><strong>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD:</strong> C√≥digo da branch atual</p>
                    <p><strong>=======:</strong> Separador</p>
                    <p><strong>&gt;&gt;&gt;&gt;&gt;&gt;&gt; branch:</strong> C√≥digo da branch sendo merged</p>
                </div>
            </div>
        `;
    }

    getResolutionToolsContent() {
        return `
            <div class="resolution-tools">
                <h3>Ferramentas de Resolu√ß√£o</h3>
                <div class="tool-items">
                    <div class="tool-item">
                        <h4>üéØ Git Mergetool</h4>
                        <pre><code>git mergetool</code></pre>
                    </div>
                    <div class="tool-item">
                        <h4>üíª VS Code</h4>
                        <p>Interface visual para resolver conflitos</p>
                    </div>
                    <div class="tool-item">
                        <h4>üîß Beyond Compare</h4>
                        <p>Ferramenta profissional de merge</p>
                    </div>
                    <div class="tool-item">
                        <h4>‚úã Manual</h4>
                        <p>Edi√ß√£o direta no editor de texto</p>
                    </div>
                </div>
            </div>
        `;
    }

    getResolutionStrategiesContent() {
        return `
            <div class="resolution-strategies">
                <h3>Estrat√©gias de Resolu√ß√£o</h3>
                <div class="strategy-steps">
                    <div class="step-item">
                        <h4>1. üìñ Entender o Conflito</h4>
                        <p>Ler c√≥digo de ambas as sides</p>
                    </div>
                    <div class="step-item">
                        <h4>2. ü§ù Comunicar</h4>
                        <p>Conversar com outros desenvolvedores</p>
                    </div>
                    <div class="step-item">
                        <h4>3. üîß Resolver</h4>
                        <p>Combinar ou escolher melhor solu√ß√£o</p>
                    </div>
                    <div class="step-item">
                        <h4>4. üß™ Testar</h4>
                        <p>Verificar se funciona corretamente</p>
                    </div>
                </div>
            </div>
        `;
    }

    getConflictPreventionContent() {
        return `
            <div class="conflict-prevention">
                <h3>Preven√ß√£o de Conflitos</h3>
                <div class="prevention-tips">
                    <div class="tip-item">
                        <h4>üîÑ Sync Frequente</h4>
                        <p>Fazer pull regularmente da main</p>
                    </div>
                    <div class="tip-item">
                        <h4>üìù Commits Pequenos</h4>
                        <p>Mudan√ßas menores e mais frequentes</p>
                    </div>
                    <div class="tip-item">
                        <h4>üí¨ Comunica√ß√£o</h4>
                        <p>Avisar sobre mudan√ßas em arquivos compartilhados</p>
                    </div>
                    <div class="tip-item">
                        <h4>üèóÔ∏è Arquitetura</h4>
                        <p>C√≥digo bem estruturado reduz conflitos</p>
                    </div>
                </div>
            </div>
        `;
    }

    getExercise5Content() {
        return `
            <div class="exercise">
                <h3>Simula√ß√£o de Conflitos (25 minutos)</h3>
                <div class="checklist">
                    <label><input type="checkbox"> Dois participantes modificam mesmo arquivo</label>
                    <label><input type="checkbox"> Primeiro faz push das mudan√ßas</label>
                    <label><input type="checkbox"> Segundo tenta fazer push (falha)</label>
                    <label><input type="checkbox"> Fazer pull e identificar conflitos</label>
                    <label><input type="checkbox"> Resolver conflitos manualmente</label>
                    <label><input type="checkbox"> Commit da resolu√ß√£o e push</label>
                </div>
            </div>
        `;
    }

    // Continue with remaining methods...
    getIssuesContent() {
        return `
            <div class="issues-intro">
                <h3>GitHub Issues</h3>
                <p>Sistema de rastreamento de bugs, features e tarefas</p>
                <div class="issue-features">
                    <div class="feature-item">
                        <h4>üêõ Bug Reports</h4>
                        <p>Relatar e rastrear bugs</p>
                    </div>
                    <div class="feature-item">
                        <h4>‚ú® Feature Requests</h4>
                        <p>Propor novas funcionalidades</p>
                    </div>
                    <div class="feature-item">
                        <h4>üìù Documenta√ß√£o</h4>
                        <p>Melhorias na documenta√ß√£o</p>
                    </div>
                    <div class="feature-item">
                        <h4>üí¨ Discuss√µes</h4>
                        <p>Debate sobre implementa√ß√µes</p>
                    </div>
                </div>
            </div>
        `;
    }

    // Add more content methods as needed...
    getSemanticCommitsContent() {
        return `
            <div class="semantic-commits">
                <h3>Conventional Commits</h3>
                <div class="commit-types">
                    <div class="commit-type">
                        <h4>‚ú® feat:</h4>
                        <p>Nova funcionalidade</p>
                    </div>
                    <div class="commit-type">
                        <h4>üêõ fix:</h4>
                        <p>Corre√ß√£o de bug</p>
                    </div>
                    <div class="commit-type">
                        <h4>üìù docs:</h4>
                        <p>Documenta√ß√£o</p>
                    </div>
                    <div class="commit-type">
                        <h4>üé® style:</h4>
                        <p>Formata√ß√£o</p>
                    </div>
                    <div class="commit-type">
                        <h4>‚ôªÔ∏è refactor:</h4>
                        <p>Refatora√ß√£o</p>
                    </div>
                    <div class="commit-type">
                        <h4>üß™ test:</h4>
                        <p>Testes</p>
                    </div>
                </div>
            </div>
        `;
    }

    getFinalSummaryContent() {
        return `
            <div class="final-summary">
                <h3>Resumo do Curso</h3>
                <div class="summary-items">
                    <div class="summary-item">
                        <h4>ü§ù Colabora√ß√£o</h4>
                        <p>Aprendemos a trabalhar em equipe</p>
                    </div>
                    <div class="summary-item">
                        <h4>üå≥ Branching</h4>
                        <p>Estrat√©gias para organizar o desenvolvimento</p>
                    </div>
                    <div class="summary-item">
                        <h4>üîÑ Pull Requests</h4>
                        <p>Processo de revis√£o e integra√ß√£o</p>
                    </div>
                    <div class="summary-item">
                        <h4>‚öîÔ∏è Conflitos</h4>
                        <p>Como identificar e resolver</p>
                    </div>
                </div>
            </div>
        `;
    }

    // Default methods for remaining slides
    getIssueTemplatesContent() {
        return `
            <div class="issue-templates">
                <h3>Padronizando Reports com Templates</h3>
                <div class="template-info">
                    <p>Armazenados em <code>.github/ISSUE_TEMPLATE/*.md</code> ou <code>.github/ISSUE_TEMPLATE.md</code></p>
                    <p>Preenchem automaticamente ao criar nova issue</p>
                </div>
                <div class="template-example">
                    <h4>Exemplo: Bug Report Template</h4>
                    <pre><code>---
name: Bug Report
about: Reporte um bug
title: '[BUG] '
labels: bug
assignees: ''
---

## Descri√ß√£o do Bug
Descri√ß√£o clara e concisa do problema.

## Passos para Reproduzir
1. Ir para '...'
2. Clicar em '...'
3. Ver erro

## Comportamento Esperado
O que deveria acontecer.

## Screenshots
Se aplic√°vel, adicione screenshots.
</code></pre>
                </div>
            </div>
        `;
    }
    getLabelsContent() {
        return `
            <div class="labels-system">
                <h3>Categorias Essenciais de Labels</h3>
                <div class="label-categories">
                    <div class="label-category">
                        <h4>üè∑Ô∏è Tipo</h4>
                        <div class="label-examples">
                            <span class="label bug">bug</span>
                            <span class="label feature">feature</span>
                            <span class="label docs">documentation</span>
                        </div>
                    </div>
                    <div class="label-category">
                        <h4>üî• Prioridade</h4>
                        <div class="label-examples">
                            <span class="label priority-high">high</span>
                            <span class="label priority-medium">medium</span>
                            <span class="label priority-low">low</span>
                        </div>
                    </div>
                    <div class="label-category">
                        <h4>üö¶ Status</h4>
                        <div class="label-examples">
                            <span class="label in-progress">in-progress</span>
                            <span class="label review">review</span>
                            <span class="label blocked">blocked</span>
                        </div>
                    </div>
                    <div class="label-category">
                        <h4>üí™ Dificuldade</h4>
                        <div class="label-examples">
                            <span class="label beginner">good-first-issue</span>
                            <span class="label expert">expert</span>
                        </div>
                    </div>
                </div>
            </div>
        `;
    }

    getProjectsContent() {
        return `
            <div class="projects-content">
                <h3>Kanban Board</h3>
                <div class="kanban-board">
                    <div class="kanban-column todo">
                        <h4>üìã To Do</h4>
                        <p>Tarefas planejadas</p>
                    </div>
                    <div class="kanban-column in-progress">
                        <h4>‚öôÔ∏è In Progress</h4>
                        <p>Em desenvolvimento</p>
                    </div>
                    <div class="kanban-column review">
                        <h4>üëÄ Review</h4>
                        <p>Aguardando revis√£o</p>
                    </div>
                    <div class="kanban-column done">
                        <h4>‚úÖ Done</h4>
                        <p>Conclu√≠do</p>
                    </div>
                </div>
                <div class="automation-section">
                    <h3>ü§ñ Automa√ß√£o</h3>
                    <div class="automation-rules">
                        <div class="rule-item">
                            <span class="rule-trigger">Issues Criadas</span>
                            <span class="rule-arrow">‚Üí</span>
                            <span class="rule-action">To Do (autom√°tico)</span>
                        </div>
                        <div class="rule-item">
                            <span class="rule-trigger">PR Aberto</span>
                            <span class="rule-arrow">‚Üí</span>
                            <span class="rule-action">In Progress (autom√°tico)</span>
                        </div>
                        <div class="rule-item">
                            <span class="rule-trigger">PR Merged</span>
                            <span class="rule-arrow">‚Üí</span>
                            <span class="rule-action">Done (autom√°tico)</span>
                        </div>
                    </div>
                </div>
            </div>
        `;
    }

    getMilestonesContent() {
        return `
            <div class="milestones-content">
                <h3>Organiza√ß√£o por Objetivos</h3>
                <div class="milestone-types">
                    <div class="milestone-type">
                        <h4>üöÄ Releases Espec√≠ficos</h4>
                        <p>Vers√µes planejadas do software</p>
                    </div>
                    <div class="milestone-type">
                        <h4>üèÉ Sprints de Desenvolvimento</h4>
                        <p>Ciclos de trabalho definidos</p>
                    </div>
                    <div class="milestone-type">
                        <h4>üéØ Metas de Projeto</h4>
                        <p>Objetivos estrat√©gicos</p>
                    </div>
                </div>
                
                <h3>Exemplos</h3>
                <div class="milestone-examples">
                    <div class="milestone-example">
                        <span class="milestone-badge">v1.0.0 Release</span>
                        <div class="milestone-progress">
                            <div class="progress-bar" style="width: 85%"></div>
                        </div>
                        <span class="milestone-status">85% conclu√≠do</span>
                    </div>
                    <div class="milestone-example">
                        <span class="milestone-badge">Sprint 1 - Autentica√ß√£o</span>
                        <div class="milestone-progress">
                            <div class="progress-bar" style="width: 100%"></div>
                        </div>
                        <span class="milestone-status">Conclu√≠do</span>
                    </div>
                    <div class="milestone-example">
                        <span class="milestone-badge">Q1 2024 Goals</span>
                        <div class="milestone-progress">
                            <div class="progress-bar" style="width: 35%"></div>
                        </div>
                        <span class="milestone-status">35% conclu√≠do</span>
                    </div>
                </div>
            </div>
        `;
    }

    getLinkingContent() {
        return `
            <div class="linking-content">
                <h3>Palavras-chave</h3>
                <div class="keywords-examples">
                    <div class="keyword-item">
                        <code>closes #123</code>
                        <p>Fecha a issue quando o PR for mesclado</p>
                    </div>
                    <div class="keyword-item">
                        <code>fixes #123</code>
                        <p>Marca como corrigido ap√≥s o merge</p>
                    </div>
                    <div class="keyword-item">
                        <code>resolves #123</code>
                        <p>Resolve e fecha a issue</p>
                    </div>
                    <div class="keyword-item">
                        <code>relates to #123</code>
                        <p>Cria refer√™ncia sem fechar</p>
                    </div>
                </div>
                
                <h3>Benef√≠cios</h3>
                <div class="benefits-grid">
                    <div class="benefit-item">
                        <h4>üîÑ Fechamento Autom√°tico</h4>
                        <p>Issues fechadas ao fazer merge</p>
                    </div>
                    <div class="benefit-item">
                        <h4>üîç Rastreabilidade</h4>
                        <p>Conex√£o clara entre c√≥digo e problema</p>
                    </div>
                    <div class="benefit-item">
                        <h4>üìù Documenta√ß√£o</h4>
                        <p>Registro de decis√µes e solu√ß√µes</p>
                    </div>
                </div>
            </div>
        `;
    }
    getExercise6Content() {
        return `
            <div class="exercise">
                <h3>Gest√£o de Projeto (10 minutos)</h3>
                <div class="checklist">
                    <label><input type="checkbox"> Criar issue com template</label>
                    <label><input type="checkbox"> Adicionar labels apropriados</label>
                    <label><input type="checkbox"> Configurar projeto kanban</label>
                    <label><input type="checkbox"> Criar milestone</label>
                    <label><input type="checkbox"> Linkar PR com issue</label>
                </div>
                <div class="exercise-commands">
                    <h4>Dicas:</h4>
                    <ul>
                        <li>Use palavras-chave como "closes", "fixes", "resolves" seguidas de #issue-number</li>
                        <li>Organize suas colunas como "To Do", "In Progress", "Review", "Done"</li>
                        <li>Crie um milestone para a vers√£o atual do projeto</li>
                    </ul>
                </div>
            </div>
        `;
    }

    getCommitExamplesContent() {
        return `
            <div class="commit-examples">
                <h3>Bons Exemplos:</h3>
                <div class="good-commit">
                    <pre><code>feat(auth): adicionar login com OAuth

Implementa autentica√ß√£o via Google OAuth 2.0
- Adiciona bot√£o de login
- Configura redirect URI
- Valida tokens JWT

Closes #123</code></pre>
                </div>
                
                <h3>Maus Exemplos:</h3>
                <div class="bad-commits">
                    <div class="bad-commit-examples">
                        <span class="bad-commit">fix stuff</span>
                        <span class="bad-commit">update</span>
                        <span class="bad-commit">changes</span>
                        <span class="bad-commit">wip</span>
                    </div>
                    <p>‚ö†Ô∏è Commits vagos dificultam o entendimento do hist√≥rico</p>
                </div>
            </div>
        `;
    }

    getCompleteWorkflowContent() {
        return `
            <div class="workflow-steps">
                <h3>Fluxo Ideal de Desenvolvimento</h3>
                <ol class="workflow-list">
                    <li><strong>Issue criado</strong> - Documentar o problema ou feature</li>
                    <li><strong>Branch criada</strong> - <code>feature/descricao-curta</code></li>
                    <li><strong>Desenvolvimento</strong> - Implementa√ß√£o da solu√ß√£o</li>
                    <li><strong>Commits sem√¢nticos</strong> - <code>feat/fix/docs/etc:</code></li>
                    <li><strong>Pull Request</strong> - Descri√ß√£o completa e links</li>
                    <li><strong>Code Review</strong> - Feedback construtivo</li>
                    <li><strong>Merge</strong> - Integra√ß√£o ao main</li>
                    <li><strong>Deploy</strong> - Entrega ao ambiente</li>
                    <li><strong>Issue fechado</strong> - Ciclo completo</li>
                </ol>
            </div>
        `;
    }

    getActionsContent() {
        return `
            <div class="actions-content">
                <h3>Automa√ß√£o com GitHub Actions</h3>
                <div class="action-example">
                    <h4>Exemplo B√°sico:</h4>
                    <pre><code>name: CI
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run tests
        run: npm test</code></pre>
                </div>
                <div class="actions-usecases">
                    <h4>Casos de Uso Comuns:</h4>
                    <ul>
                        <li>üß™ Execu√ß√£o de testes</li>
                        <li>üîç An√°lise de qualidade de c√≥digo</li>
                        <li>üì¶ Build e deploy autom√°ticos</li>
                        <li>ü§ñ Resposta autom√°tica a issues</li>
                        <li>üìÖ Tarefas programadas</li>
                    </ul>
                </div>
            </div>
        `;
    }

    getMetricsContent() {
        return `
            <div class="metrics-content">
                <h3>Indicadores Importantes</h3>
                <div class="metrics-grid">
                    <div class="metric-item">
                        <h4>‚è±Ô∏è Tempo de Review</h4>
                        <p>Quanto tempo PRs ficam abertos</p>
                    </div>
                    <div class="metric-item">
                        <h4>‚öîÔ∏è Conflitos</h4>
                        <p>Frequ√™ncia de conflitos no merge</p>
                    </div>
                    <div class="metric-item">
                        <h4>üìä Frequ√™ncia de Commits</h4>
                        <p>Ritmo de desenvolvimento</p>
                    </div>
                    <div class="metric-item">
                        <h4>üß™ Cobertura de Testes</h4>
                        <p>Porcentagem de c√≥digo testado</p>
                    </div>
                </div>
                <div class="tools-section">
                    <h3>Ferramentas:</h3>
                    <ul class="tools-list">
                        <li>GitHub Insights</li>
                        <li>Pull Request Analytics</li>
                        <li>Code Frequency Graphs</li>
                    </ul>
                </div>
            </div>
        `;
    }

    getLearningResourcesContent() {
        return `
            <div class="learning-resources">
                <div class="resource-category">
                    <h3>üìö Documenta√ß√£o</h3>
                    <ul>
                        <li><a href="https://docs.github.com">GitHub Docs</a></li>
                        <li><a href="https://git-scm.com/doc">Git Documentation</a></li>
                        <li><a href="https://www.atlassian.com/git/tutorials">Atlassian Git Tutorials</a></li>
                    </ul>
                </div>
                <div class="resource-category">
                    <h3>üéì Cursos</h3>
                    <ul>
                        <li>GitHub Learning Lab</li>
                        <li>Pro Git (livro gratuito)</li>
                        <li>Udacity Git Course</li>
                    </ul>
                </div>
                <div class="resource-category">
                    <h3>üõ†Ô∏è Ferramentas</h3>
                    <ul>
                        <li>Git Kraken</li>
                        <li>GitHub Desktop</li>
                        <li>Visual Studio Code + Git Extensions</li>
                    </ul>
                </div>
            </div>
        `;
    }
    getNextStepsContent() {
        return `
            <div class="next-steps">
                <h3>Para Continuar Aprendendo</h3>
                <div class="steps-grid">
                    <div class="step-item">
                        <h4>üöÄ Pratique em projetos pessoais</h4>
                        <p>Aplique os conceitos em seus pr√≥prios projetos</p>
                    </div>
                    <div class="step-item">
                        <h4>üåü Contribua para projetos open source</h4>
                        <p>Experimente o fluxo em projetos reais</p>
                    </div>
                    <div class="step-item">
                        <h4>ü§ñ Explore GitHub Actions</h4>
                        <p>Automatize seu fluxo de trabalho</p>
                    </div>
                    <div class="step-item">
                        <h4>üîç Estude Git avan√ßado</h4>
                        <p>Rebase interativo, bisect, reflog</p>
                    </div>
                    <div class="step-item">
                        <h4>üë• Participe de comunidades</h4>
                        <p>Compartilhe conhecimento e aprenda mais</p>
                    </div>
                </div>
            </div>
        `;
    }

    getFinalSummaryContent() {
        return `
            <div class="final-summary">
                <h3>Principais Conceitos</h3>
                <div class="concepts-grid">
                    <div class="concept-item">
                        <h4>ü§ù Colabora√ß√£o efetiva com Git/GitHub</h4>
                    </div>
                    <div class="concept-item">
                        <h4>üå≥ Estrat√©gias de branching</h4>
                    </div>
                    <div class="concept-item">
                        <h4>üîÑ Pull Requests e Code Review</h4>
                    </div>
                    <div class="concept-item">
                        <h4>‚öîÔ∏è Resolu√ß√£o de conflitos</h4>
                    </div>
                    <div class="concept-item">
                        <h4>üìä Organiza√ß√£o de projetos</h4>
                    </div>
                    <div class="concept-item">
                        <h4>‚≠ê Boas pr√°ticas</h4>
                    </div>
                </div>
                
                <h3>Lembre-se</h3>
                <div class="reminders">
                    <div class="reminder-item">
                        <h4>üìù Commits pequenos e frequentes</h4>
                    </div>
                    <div class="reminder-item">
                        <h4>üí¨ Comunica√ß√£o clara</h4>
                    </div>
                    <div class="reminder-item">
                        <h4>üîç Revis√£o construtiva</h4>
                    </div>
                    <div class="reminder-item">
                        <h4>üìö Documenta√ß√£o adequada</h4>
                    </div>
                </div>
            </div>
        `;
    }

    getThankYouContent() {
        return `
            <div class="thank-you">
                <h2>Obrigado!</h2>
                <div class="contact-info">
                    <h3>Contato</h3>
                    <div class="contacts-grid">
                        <div class="contact-item">
                            <h4>üìß Email:</h4>
                            <p>Juan e Amanda</p>
                        </div>
                        <div class="contact-item">
                            <h4>üêô GitHub:</h4>
                            <p>juanfariasdev e Amanda</p>
                        </div>
                        <div class="contact-item">
                            <h4>üíº LinkedIn:</h4>
                            <p>Juan e Amanda</p>
                        </div>
                    </div>
                </div>
            </div>
        `;
    }
}

// Initialize presentation when DOM is loaded
document.addEventListener('DOMContentLoaded', () => {
    new GitPresentationController();
});